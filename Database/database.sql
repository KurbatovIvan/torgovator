/******************************************************************************/
/***         Generated by IBExpert 2014.9.29.1 04.06.2019 17:11:15          ***/
/******************************************************************************/

SET SQL DIALECT 3;

SET NAMES WIN1251;

SET CLIENTLIB 'D:\Distr\Interbase\Firebird\fbclient3.dll';

CREATE DATABASE 'profserver:C:\TORGOVATOR.FDB'
USER 'SYSDBA' PASSWORD 'masterkey'
PAGE_SIZE 16384
DEFAULT CHARACTER SET WIN1251 COLLATION WIN1251;



/******************************************************************************/
/***                                Domains                                 ***/
/******************************************************************************/

CREATE DOMAIN BOOL AS
SMALLINT
DEFAULT 0
NOT NULL
CHECK (value in (0,1));

CREATE DOMAIN FILENAME AS
VARCHAR(100);

CREATE DOMAIN ID AS
INTEGER
NOT NULL;

CREATE DOMAIN IKU AS
VARCHAR(20);

CREATE DOMAIN INN AS
BIGINT;

CREATE DOMAIN INN32 AS
DOUBLE PRECISION;

CREATE DOMAIN KPP AS
VARCHAR(9);

CREATE DOMAIN LONG_NAME AS
VARCHAR(2048);

CREATE DOMAIN NAME AS
VARCHAR(150);

CREATE DOMAIN NAME1000 AS
VARCHAR(1000);

CREATE DOMAIN NAME255 AS
VARCHAR(255);

CREATE DOMAIN NAME500 AS
VARCHAR(500);

CREATE DOMAIN NUMBERSTR AS
VARCHAR(20);

CREATE DOMAIN OKPD2_CODE AS
VARCHAR(12);

CREATE DOMAIN OLDDATE AS
TIMESTAMP;

CREATE DOMAIN PLACINGWAY AS
VARCHAR(512);

CREATE DOMAIN PURCHASECODE AS
VARCHAR(36)
COLLATE PXW_CYRL;

CREATE DOMAIN REGNUMBER AS
VARCHAR(11)
NOT NULL;

CREATE DOMAIN USERID AS
VARCHAR(21);

CREATE DOMAIN ZIP AS
VARCHAR(6);



/******************************************************************************/
/***                               Generators                               ***/
/******************************************************************************/

CREATE GENERATOR GEN_CUSTOMERREQUIREMENTS_ID;
SET GENERATOR GEN_CUSTOMERREQUIREMENTS_ID TO 3531825;

CREATE GENERATOR GEN_PURCHASEOBJECTS_ID;
SET GENERATOR GEN_PURCHASEOBJECTS_ID TO 10762201;

CREATE GENERATOR GEN_ZAKUPKI_ID;
SET GENERATOR GEN_ZAKUPKI_ID TO 3043056;



SET TERM ^ ; 



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/

CREATE PROCEDURE ORGINSERT (
    INN BIGINT,
    OGRN VARCHAR(20),
    KPP VARCHAR(9),
    OKTMO VARCHAR(20),
    SHORTNAME NAME500,
    FULLNAME VARCHAR(1000),
    ZIP VARCHAR(6),
    URL VARCHAR(500),
    POSTALADDRESS VARCHAR(255),
    TIMEZONEUTCOFFSET VARCHAR(20),
    ORGANIZATIONTYPECODE INTEGER,
    ACTUAL SMALLINT,
    PHONE VARCHAR(150),
    EMAIL VARCHAR(100),
    FILENAME VARCHAR(100),
    REGNUMBER VARCHAR(11),
    CONTACTPERSON VARCHAR(150))
AS
BEGIN
  EXIT;
END^






SET TERM ; ^



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/



CREATE TABLE CUSTOMERREQUIREMENTS (
    ID            ID,
    RECORDINDEX   INTEGER,
    PURCHASECODE  PURCHASECODE
);

CREATE TABLE MY_ORG (
    INN     INN,
    NAME    NAME,
    USERID  USERID
);

CREATE TABLE OKPD2 (
    ID          INTEGER,
    NAME        VARCHAR(1024),
    CREATEDATE  TIMESTAMP,
    UPDATEDATE  TIMESTAMP,
    STARTDATE   TIMESTAMP,
    DELETEDATE  TIMESTAMP
);

CREATE TABLE ORGANIZATION (
    REGNUMBER             REGNUMBER,
    OGRN                  NUMBERSTR,
    KPP                   KPP,
    OKTMO                 NUMBERSTR,
    SHORTNAME             NAME500,
    FULLNAME              NAME1000,
    ZIP                   ZIP,
    URL                   NAME500,
    POSTALADDRESS         NAME255,
    TIMEZONEUTCOFFSET     NUMBERSTR,
    ORGANIZATIONTYPECODE  ID,
    ACTUAL                BOOL,
    PHONE                 NAME,
    EMAIL                 FILENAME,
    FILENAME              FILENAME,
    CONTACTPERSON         NAME,
    INN                   INN,
    CREATEDATE            OLDDATE,
    UPDATEDATE            OLDDATE,
    IKU                   IKU,
    REGISTER              BOOL
);

CREATE TABLE PURCHASEOBJECTS (
    ID           ID,
    RECORDINDEX  INTEGER,
    OKPD2_CODE   OKPD2_CODE,
    OKPD2_NAME   NAME
);

CREATE TABLE REGION (
    ID    ID,
    NAME  FILENAME
);

CREATE TABLE USERS (
    USERID  USERID NOT NULL,
    EMAIL   NAME,
    PASSWD  NAME
);

CREATE TABLE ZAKUPKI (
    ID                       ID,
    PLACINGWAY               NAME500,
    FILENAME                 FILENAME,
    PURCHASENUMBER           NUMBERSTR,
    OKDP2_CODE               NUMBERSTR,
    OKPD2_NAME               NAME,
    PURCHASEOBJECTINFO       LONG_NAME,
    INN                      INN32,
    REGNUM                   INN32,
    HREF                     NAME,
    STARTDATE                TIMESTAMP,
    ENDDATE                  TIMESTAMP,
    MAXPRICE                 DOUBLE PRECISION,
    RESPONSIBLEORG_FULLNAME  NAME500,
    PUBLISHDATE              TIMESTAMP,
    UPDATEDATE               OLDDATE,
    CREATEDATE               OLDDATE
);



/******************************************************************************/
/***                                 Views                                  ***/
/******************************************************************************/


/* View: ORG_VIEW */
CREATE VIEW ORG_VIEW(
    INN,
    KPP,
    OGRN,
    PHONE,
    EMAIL,
    NAME,
    EXISTINMORG)
AS
select INN, KPP, OGRN, ORG.PHONE, ORG.EMAIL, FULLNAME as NAME, (select inn from my_org morg where morg.inn=ORG.inn and morg.userid='113686015690075602670') as existinmorg
from ORGANIZATION ORG
where ORG.ACTUAL = 1
order by INN
;




/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE CUSTOMERREQUIREMENTS ADD CONSTRAINT PK_CUSTOMERREQUIREMENTS PRIMARY KEY (ID);
ALTER TABLE ORGANIZATION ADD CONSTRAINT PK_ORGANIZATION PRIMARY KEY (REGNUMBER);
ALTER TABLE PURCHASEOBJECTS ADD CONSTRAINT PK_PURCHASEOBJECTS PRIMARY KEY (ID);
ALTER TABLE REGION ADD CONSTRAINT PK_REGION PRIMARY KEY (ID);
ALTER TABLE USERS ADD PRIMARY KEY (USERID);
ALTER TABLE ZAKUPKI ADD CONSTRAINT PK_ZAKUPKI PRIMARY KEY (ID);


/******************************************************************************/
/***                                Indices                                 ***/
/******************************************************************************/

CREATE INDEX CUSTOMERREQUIREMENTS_IDX2 ON CUSTOMERREQUIREMENTS (RECORDINDEX);
CREATE INDEX CUSTOMERREQUIREMENTS_IDX3 ON CUSTOMERREQUIREMENTS (PURCHASECODE);
CREATE INDEX CUSTOMERREQUIREMENTS_IDX4 ON CUSTOMERREQUIREMENTS COMPUTED BY (substring(PURCHASECODE from 4 for 10));
CREATE INDEX MY_ORG_IDX_INN ON MY_ORG (INN);
CREATE INDEX ORGANIZATION_IDX_INN ON ORGANIZATION (INN);
CREATE INDEX PURCHASEOBJECTS_IDX1 ON PURCHASEOBJECTS (RECORDINDEX);
CREATE INDEX PURCHASEOBJECTS_ID_OKPD2 ON PURCHASEOBJECTS (OKPD2_CODE);
CREATE INDEX ZAKUPKI_ENDDATE ON ZAKUPKI (ENDDATE);
CREATE INDEX ZAKUPKI_FILENAME ON ZAKUPKI (FILENAME);
CREATE INDEX ZAKUPKI_HREF ON ZAKUPKI (HREF);
CREATE INDEX ZAKUPKI_ID_PLACING ON ZAKUPKI (PLACINGWAY);
ALTER INDEX ZAKUPKI_ID_PLACING INACTIVE;
CREATE INDEX ZAKUPKI_PK ON ZAKUPKI (ID);
CREATE INDEX ZAKUPKI_PURCHASENUMBER ON ZAKUPKI (PURCHASENUMBER);
CREATE INDEX ZAKUPKI_STARTDATE ON ZAKUPKI (STARTDATE);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: CUSTOMERREQUIREMENTS_BI */
CREATE TRIGGER CUSTOMERREQUIREMENTS_BI FOR CUSTOMERREQUIREMENTS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_customerrequirements_id,1);
end
^

/* Trigger: PURCHASEOBJECTS_BI */
CREATE TRIGGER PURCHASEOBJECTS_BI FOR PURCHASEOBJECTS
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_purchaseobjects_id,1);
end
^

/* Trigger: TR_ORGANIZATION_BI_500 */
CREATE TRIGGER TR_ORGANIZATION_BI_500 FOR ORGANIZATION
ACTIVE BEFORE INSERT POSITION 500
as
begin
  new.createdate = 'NOW';
  new.updatedate = new.createdate;
end
^

/* Trigger: TR_ORGANIZATION_BU_500 */
CREATE TRIGGER TR_ORGANIZATION_BU_500 FOR ORGANIZATION
ACTIVE BEFORE UPDATE POSITION 500
as
begin
  new.updatedate = 'NOW';
end
^

/* Trigger: ZAKUPKI_BI */
CREATE TRIGGER ZAKUPKI_BI FOR ZAKUPKI
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.id is null) then
    new.id = gen_id(gen_zakupki_id,1);
end
^

SET TERM ; ^



/******************************************************************************/
/***                           Stored Procedures                            ***/
/******************************************************************************/


SET TERM ^ ;

ALTER PROCEDURE ORGINSERT (
    INN BIGINT,
    OGRN VARCHAR(20),
    KPP VARCHAR(9),
    OKTMO VARCHAR(20),
    SHORTNAME NAME500,
    FULLNAME VARCHAR(1000),
    ZIP VARCHAR(6),
    URL VARCHAR(500),
    POSTALADDRESS VARCHAR(255),
    TIMEZONEUTCOFFSET VARCHAR(20),
    ORGANIZATIONTYPECODE INTEGER,
    ACTUAL SMALLINT,
    PHONE VARCHAR(150),
    EMAIL VARCHAR(100),
    FILENAME VARCHAR(100),
    REGNUMBER VARCHAR(11),
    CONTACTPERSON VARCHAR(150))
AS
declare variable COUNTORG integer;
BEGIN
    if (not (Exists (select REGNUMBER  from  organization   where REGNUMBER=:REGNUMBER))) then
    insert into organization (INN,
         OGRN,
         KPP,
         OKTMO,
         SHORTNAME,
         FULLNAME,
         ZIP,
         URL,
         POSTALADDRESS,
         TIMEZONEUTCOFFSET,
         ORGANIZATIONTYPECODE,
         ACTUAL,
         PHONE,
         EMAIL,
         FILENAME,
         REGNUMBER,
         CONTACTPERSON)
         values (
         :INN,
         :OGRN,
         :KPP,
         :OKTMO,
         :SHORTNAME,
         :FULLNAME,
         :ZIP,
         :URL,
         :POSTALADDRESS,
         :TIMEZONEUTCOFFSET,
         :ORGANIZATIONTYPECODE,
         :ACTUAL,
         :PHONE,
         :EMAIL,
         :FILENAME,
         :REGNUMBER,
         :CONTACTPERSON); else
     update organization
     set
         INN=:INN,
         OGRN=:OGRN,
         KPP=:KPP,
         OKTMO=:OKTMO,
         SHORTNAME=:SHORTNAME,
         FULLNAME=:FULLNAME,
         ZIP=:ZIP,
         URL=:URL,
         POSTALADDRESS=:POSTALADDRESS,
         TIMEZONEUTCOFFSET=:TIMEZONEUTCOFFSET,
         ORGANIZATIONTYPECODE=:ORGANIZATIONTYPECODE,
         ACTUAL=:ACTUAL,
         PHONE=:PHONE,
         EMAIL=:EMAIL,
         FILENAME=:FILENAME,
         CONTACTPERSON=:CONTACTPERSON
where
         REGNUMBER=:REGNUMBER  ;

END^



SET TERM ; ^
